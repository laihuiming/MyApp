plugins {
    id 'com.android.application'
}
apply from:'/productFlavors/test.gradle'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.myapplication2"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "versionCode"
    productFlavors{
        meizu{
            applicationId = "com.test.meizu"
            //不同渠道配置不同参数
            buildConfigField "int", "TEST_VALUE","1"
            buildConfigField "String", "TEST_NAME", "\"meizu\""
        }
        xiaomi{
            applicationId = "com.test.xiaomi"
            //不同渠道配置不同参数
            buildConfigField "int", "TEST_VALUE", "2"
            buildConfigField "String", "TEST_NAME", "\"xiaomi\""
        }
        productFlavors.all{//遍历productFlavors多渠道，设置渠道号(meizu、xiaomi))
        flavor -> flavor.manifestPlaceholders.put("CHANNEL",name)
        }
    }

    applicationVariants.all{ variant ->
//        //打包完成后输出路径
//        def name = ((project.name != "app") ? project.name : rootProject.name.replace(" ", ""))+
//                "_" + variant.flavorName +
//                "_" + variant.buildType.name +
//                "_" + variant.versionName +
//                "_" + new Date().format('yyyyMMddhhmm')+".apk"
//        //相对路径app/build/outputs/apk/xiaomi/release/
//        def path = "../../../../../apk/"//相当于路径 app/apk/
//        variant.outputs.each{output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWish('.apk')){
//                //指定输出路径
//                output.outputFileName = new File(path, name)
//            }
//        }
//        //打包完成后还可以做一些别的操作，可以复制到指定目录，或者移动文件到指定目录
//        variant.assemble.doLast{
//            File out = new File("${project.rootDir}/apk")
//            variant.outputs.forEach{ file ->
//               //复制apk到指定文件夹
//                copy{
//                    from file.outputFile
//                    into out
//                }
//                //把文件移动到指定文件夹
//                ant.move file:file.outputFile,
//                todir:"${project.rootDir}/apk"
//            }
//        }
    }
//    //多渠道签名的配置
//    sigingConfigs{
//        test{
//            storeFile file("../test.keystore")
//            storePassword 'test'
//            keyAlias 'test'
//            keypasswor 'test'
//            v1SigingEnabled true
//            v2SigingEnabled true
//        }
//        xiaomi{
//            storeFile file("../xiaomi.keystore")
//            storePassword 'xiaomi'
//            keyAlias 'xiaomi'
//            keypasswor 'xiaomi'
//            v1SigingEnabled true
//            v2SigingEnabled true
//        }
//        meizu{
//            storeFile file("../meizu.keystore")
//            storePassword 'meizu'
//            keyAlias 'meizu'
//            keypasswor 'meizu'
//            v1SigingEnabled true
//            v2SigingEnabled true
//        }
//    }

//    buildTypes {
//        debug{
//            productFlavors.meizu.signingConfig sigingConfigs.test
//            productFlavors.xiaomi.signingConfig sigingConfigs.test
//        }
//        release {
////            minifyEnabled false
////            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            productFlavors.meizu.signingConfig sigingConfigs.meizu
//            productFlavors.xiaomi.signingConfig sigingConfigs.xiaomi
//        }
//    }
//    //不同渠道不同资源文件配置
//    sourceSets{
////        meizu.res.srcDirs 'src/main/res-meizu'
////        xiaomi.res.srcDirs 'src/main/res=xiaomi'
//    }
//    //不同渠道不同依赖文件
//    dependencies {
////        xiaomiAPI('')
////        meizuImplementation('')
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //retrofig
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.1'

    //glide复杂的图片变换
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'

    //PermissionDispatcher动态权限处理
    api "org.permissionsdispatcher:permissionsdispatcher:4.7.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"

    api 'com.contrarywind:Android-PickerView:4.1.9' //日期时间选择器

}